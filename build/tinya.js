var S=(e,n)=>Object.fromEntries(Object.entries(e).map(([r,t])=>[r,n(t,r)])),ee=e=>typeof e,A=(e,n=ee)=>r=>n(r)===e,x=A("number"),F=A("undefined"),g=A("string"),R=e=>e===null,w=e=>e.length===0,h=(e,...n)=>n.some(r=>r(e)),N=Array.isArray,V=A("object"),B=e=>h(e,R,F,x)||g(e)&&!(I(e)||T(e)||C(e)),U=e=>h(e,g,x,F,R)?!1:N(e)&&g(e[0])?J(e)?U(P(e)):!0:N(e[0])&&!w(e[0])&&g(e[0][0]),j=e=>n=>g(n)&&n.startsWith(e),I=j("@"),T=j("="),C=j(">"),J=e=>N(e)&&T(e[0]),L=e=>J(e)?e[0]:void 0,P=e=>J(e)?e.slice(1):e,_={},q=e=>(_[e]=(_[e]||0)+1,`${e}${_[e]}`);var ge=(e,n)=>{let r=[],t=[],o=s=>{let u=L(s),i=P(s);for(var m=1;m<i.length;m++){let p=i[m];U(p)?o(p):h(p,T,C,I)?r.push(p):B(p)&&r.push([p])}r.push([t.length,i.length-1]);let[l,c]=N(i[0])&&!w(i[0])?[i[0][0],i[0].slice(1)]:[i[0],[]],a=g(l)&&n[l]||(()=>{throw new Error("undefined node type "+l)});t.push([a,c]),u!==void 0&&r.push(u)};return o(e),[r,t]},ne="|   ",ye=(e,n)=>{let[r,t]=e,o=c=>{for(var a of Object.keys(n))if(n[a]===c)return a;return c.name||"unknown"},s=t.map(([c,a],p)=>`call ${o(c)}(${a.join(", ")}) [index ${p}]`),u=[];var i=r.length-1;let m=(c,a)=>{u.push(`${ne.repeat(c)}${a}`)},l=c=>{if(i<0)return;let a=r[i--];if(N(a))if(a.length===1)m(c,`push constant ${String(a[0])}`);else{let[f,b]=a;m(c,`${s[f]} with ${b}`);for(var p=0;p<b;p++)l(c+1)}else g(a)&&(I(a)?m(c,`push register ${a.slice(1)}`):C(a)?m(c,`push input channel ${a.slice(1)}`):T(a)&&(m(c,`store register ${a.slice(1)}`),l(c)))};return l(0),u.join(`
`)+`

`};var k=(e,n)=>{var r;return h(e,g,x,F,R)?e:N(e)?g(e[0])&&e[0]in n?h(r=n[e[0]](...e.slice(1)),N,V)?k(r,n):r:e.map(t=>k(t,n)):S(e,t=>k(t,n))};var re=(e,n=1,r=0,t=0,o=1,s=1/n,u=1)=>{let i=["add"],m=e[u];for(var l=1;l<=n;l++){let c=t+r*(2*(l-1)/(n-1||1)-.5),a=Math.pow(2,c/12);i[l]=e.with(u,x(m)?m*a:["gain",m,a]),l>1&&o!==1&&(i[l]=["gain",o,i[l]])}return s!==1?["gain",s,i]:i},te=(e,n,r=.9,t=!1)=>{let o=q("=combfilter_feed_"),s=t?[]:[o],u=t?[o]:[];return[...s,"add",[...u,"add",e],["gain",r,[["delay",n],"@"+o.slice(1)]]]},$e={unison:re,combfilter:te};var W=(e,n)=>{let r=[],t=[],o=[];for(var s=0,u=0;u<e.length;u+=2){let i=(e[u]??0)*n;r.push(i),t.push(s),o.push(e[u+1]??0),s+=i}return[r,t,o]},oe=(e,n,r,t)=>t<=0?r:n+(r-n)*(e/t),E=(e,n)=>{let[r,t,o]=W(n.slice(2),e);var s=0;return u=>{if(u>=t.at(-1)+r.at(-1))return 0;for(;u<t[s];)s--;for(;u>t[s]+r[s];)s++;return oe(u-t[s],o[s-1]??0,o[s],r[s])}},se=(e=0,n=0,r=0,t=1,o=.1)=>[,,e,1,n,t,r,t,o],Ce=(e,...n)=>E(e,se(...n)),Oe=e=>{let[n,r]=W(e,1);return r.at(-1)+n.at(-1)};var ae=Math.PI,$=2*ae,ie=(e,n,r)=>Math.max(Math.min(e,r),n),O=Math.sin,G=Math.cos,v=Math.sign,z=Math.abs,H=e=>ie(Math.tan(e),-1,1),K=e=>1-(2*e/$%2+2)%2,Q=e=>1-4*Math.abs(Math.round(e/$)-e/$),X=e=>O(e**3),Y=e=>O(e**5);var Re=(e,n)=>()=>n,ue=()=>(e,...n)=>n.reduce((r,t)=>r+t,0),Z=()=>(e,...n)=>n.reduce((r,t)=>r*t,1),ce=e=>{var n=0;return(r,t,o,s=1,u=0,i=0)=>{let m=(o>3?X:o>2?H:o>1?K:o?Q:O)(i*$+(n+=t*$/e*(1+u*Y(r))));return v(m)*z(m)**s}},me=(e,n=2)=>{var r=0,t=0,o=0,s=0;return(u,i,m)=>{var l=$*z(i)*2/e,c=G(l),a=O(l)/2/n,p=1+a,f=-2*c/p,b=(1-a)/p,y=(1+v(i)*c)/2/p,d=-(v(i)+c)/p,M=y;return s=M*r+d*(r=t)+y*(t=m)-b*o-f*(o=s)}},pe=()=>{var e=0,n=0;return(r,t=0,o)=>(++e>=t&&(e=0,n=o),n)},le=(e,n)=>{if(n===0)return(s,u)=>u;let r=e*n|0,t=new Array(r).fill(0);var o=0;return(s,u,i=0)=>{let m=t[o];return t[o]=u+m*i,o=(o+1)%r,m}},de=e=>{var n=0,r=0;return(t,o,s=.05)=>(n!==o&&(r=o+(Math.random()-.5)*s*o,n=o),r)},ve={gain:Z,ringmod:Z,add:ue,wave:ce,filter:me,bitcrush:pe,delay:le,shimmer:de};function _e(e){return e=e.replace(/([,\[\{}])([=>@]?[a-z_][a-z\d_]*?)([,:\]\}])/ig,'$1"$2"$3').replace(/([,\[])!0([,\]])/g,"$1true$2").replace(/([,\[])!1([,\]])/g,"$1false$2").replace(/\[,/g,"[null,").replace(/,,\]/g,",null]").replace(/,\s*(?=[,\]])/g,",null").replace(/([\[,]-?)(?=\.)/g,"$10").replace(/-\./g,"-0."),console.log("preprocessed JSON string:",e),JSON.parse(e,(n,r)=>r===null?void 0:r)}function we(e){return JSON.stringify(e).replace(/true/g,"!0").replace(/false/g,"!1").replace(/,null\]/g,",,]").replace(/\[null,/g,"[,").replace(/,null(?=[,\]])/g,",").replace(/([\[,]-?)0(?=\.)/g,"$1").replace(/-0\./g,"-.").replace(/([,\[\{])"([=>@]?[a-z_][a-z\d_]+?)"([,:\}])/ig,"$1$2$3")}var Pe=(e,n,r,t=44100)=>{let o=[],[s,u]=e,i={},m=u.map(([y,d])=>y(t,...d)),l=r*t,c=S(n,y=>E(t,y)),a=[];var p={},f,b;for(b=0;b<l;b++){p={};for(f of Object.keys(c))p[f]=c[f](b,p);for(a.length=0,f=0;f<s.length;f++){let d=s[f];if(T(d))i[d.slice(1)]=a.at(-1);else if(I(d))a.push(i[d.slice(1)]??0);else if(C(d))a.push(p[d.slice(1)]??0);else if(d.length===1)a.push(d[0]);else{let[M,D]=d;a.push(m[M](b,...a.splice(a.length-D,D)))}}let y=a.pop();if(!x(y))throw new Error(`got NaN sample at sampleNo=${b}`);o.push(y)}return o},ke=(e,n,r=44100)=>{let t=x(e[0])?[e]:e,o=n.createBuffer(t.length,t[0].length,r),s=n.createBufferSource();return t.map((u,i)=>o.getChannelData(i).set(u)),s.buffer=o,s};export{Ce as adsrNode,me as biquadFilter,pe as bitcrusher,Pe as buildSamples,$e as builtinMacros,ve as builtinNodes,Oe as channelDuration,te as combFilter,ge as compileInstrument,Re as constant,ye as debugDumpInstrument,le as delay,Z as gainMixer,k as macroexpand,se as makeADSRChannel,_e as minparse,we as minstringify,de as shimmerer,E as standardChannel,ue as summingMixer,ke as toBufferNode,re as unisons,ce as zzfxOscillator};
//# sourceMappingURL=tinya.js.map
