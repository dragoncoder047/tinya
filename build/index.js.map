{
  "version": 3,
  "sources": ["../src/lib/data.syd", "../src/index.ts"],
  "sourcesContent": ["import { Mapping, DefaultPlaceholder, ParameterDescriptor, Name, InterpolatedValue, Call, Block, Value, Conditional, Template, Definition, Assignment, BinaryOp, LocationTrace } from \"syd\";\n\nexport const source = /* @__PURE__ */ [\n    \"// basic control flow stuff\",\n    \"\",\n    \"/** while - repeats body while cond is true */\",\n    \"@while(@cond, @body) :- {\",\n    \"    &cond\",\n    \"        ? (&body, while(&cond, &body))\",\n    \"        : 0\",\n    \"};\",\n    \"\",\n    \"/**\",\n    \" * for - repeats body with var running through min-max\",\n    \" * (equivalent to `for (var = min; var < max; var += step) {body}` in JS)\",\n    \" */\",\n    \"@for(@var, min, max, @body, step=1) :- {\",\n    \"    &var = &min;\",\n    \"    while(&var < &max, (\",\n    \"        &body;\",\n    \"        &var += &step\",\n    \"    ))\",\n    \"};\",\n    \"\",\n    \"/** quotes the expression and does NOT evaluate it - returns the AST node verbatim */\",\n    \"quote(@code) :- code;\",\n    \"\",\n    \"/** forces the code to be expanded in the caller's local scope */\",\n    \"@expand(code) :- code;\",\n    \"\"\n].join(\"\\n\");\n\nconst     \n    _str0while = \"while\", \n    _str1cond = \"cond\", \n    _str2datasyd = \"data.syd\", \n    _str3body = \"body\", \n    _str4for = \"for\", \n    _str5var = \"var\", \n    _str6min = \"min\", \n    _str7max = \"max\", \n    _str8step = \"step\", \n    _str9 = \"<\", \n    _str10 = \"+\", \n    _str11quote = \"quote\", \n    _str12code = \"code\", \n    _str13expand = \"expand\";\n\nexport const ast = new Block(new LocationTrace(3, 0, _str2datasyd),\n    [\n        new Definition(new LocationTrace(3, 1, _str2datasyd),\n            _str0while,\n            true,\n            [\n                new ParameterDescriptor(new LocationTrace(3, 8, _str2datasyd),\n                    _str1cond,\n                    new Mapping(new LocationTrace(3, 8, _str2datasyd),\n                        []),\n                    new DefaultPlaceholder(new LocationTrace(3, 8, _str2datasyd)),\n                    true),\n                new ParameterDescriptor(new LocationTrace(3, 15, _str2datasyd),\n                    _str3body,\n                    new Mapping(new LocationTrace(3, 15, _str2datasyd),\n                        []),\n                    new DefaultPlaceholder(new LocationTrace(3, 15, _str2datasyd)),\n                    true)],\n            new Template(new LocationTrace(3, 24, _str2datasyd),\n                new Conditional(new LocationTrace(5, 8, _str2datasyd),\n                    new InterpolatedValue(new LocationTrace(4, 4, _str2datasyd),\n                        new Name(new LocationTrace(4, 5, _str2datasyd),\n                            _str1cond)),\n                    new Block(new LocationTrace(5, 12, _str2datasyd),\n                        [\n                            new InterpolatedValue(new LocationTrace(5, 11, _str2datasyd),\n                                new Name(new LocationTrace(5, 12, _str2datasyd),\n                                    _str3body)),\n                            new Call(new LocationTrace(5, 18, _str2datasyd),\n                                _str0while,\n                                [\n                                    new InterpolatedValue(new LocationTrace(5, 24, _str2datasyd),\n                                        new Name(new LocationTrace(5, 25, _str2datasyd),\n                                            _str1cond)),\n                                    new InterpolatedValue(new LocationTrace(5, 31, _str2datasyd),\n                                        new Name(new LocationTrace(5, 32, _str2datasyd),\n                                            _str3body))])]),\n                    new Value(new LocationTrace(6, 10, _str2datasyd),\n                        0)))),\n        new Definition(new LocationTrace(13, 1, _str2datasyd),\n            _str4for,\n            true,\n            [\n                new ParameterDescriptor(new LocationTrace(13, 6, _str2datasyd),\n                    _str5var,\n                    new Mapping(new LocationTrace(13, 6, _str2datasyd),\n                        []),\n                    new DefaultPlaceholder(new LocationTrace(13, 6, _str2datasyd)),\n                    true),\n                new Name(new LocationTrace(13, 11, _str2datasyd),\n                    _str6min),\n                new Name(new LocationTrace(13, 16, _str2datasyd),\n                    _str7max),\n                new ParameterDescriptor(new LocationTrace(13, 22, _str2datasyd),\n                    _str3body,\n                    new Mapping(new LocationTrace(13, 22, _str2datasyd),\n                        []),\n                    new DefaultPlaceholder(new LocationTrace(13, 22, _str2datasyd)),\n                    true),\n                new ParameterDescriptor(new LocationTrace(13, 28, _str2datasyd),\n                    _str8step,\n                    new Mapping(new LocationTrace(13, 32, _str2datasyd),\n                        []),\n                    new Value(new LocationTrace(13, 33, _str2datasyd),\n                        1),\n                    false)],\n            new Template(new LocationTrace(13, 39, _str2datasyd),\n                new Block(new LocationTrace(14, 5, _str2datasyd),\n                    [\n                        new Assignment(new LocationTrace(14, 4, _str2datasyd),\n                            new InterpolatedValue(new LocationTrace(14, 4, _str2datasyd),\n                                new Name(new LocationTrace(14, 5, _str2datasyd),\n                                    _str5var)),\n                            new InterpolatedValue(new LocationTrace(14, 11, _str2datasyd),\n                                new Name(new LocationTrace(14, 12, _str2datasyd),\n                                    _str6min))),\n                        new Call(new LocationTrace(15, 4, _str2datasyd),\n                            _str0while,\n                            [\n                                new BinaryOp(new LocationTrace(15, 15, _str2datasyd),\n                                    _str9,\n                                    new InterpolatedValue(new LocationTrace(15, 10, _str2datasyd),\n                                        new Name(new LocationTrace(15, 11, _str2datasyd),\n                                            _str5var)),\n                                    new InterpolatedValue(new LocationTrace(15, 17, _str2datasyd),\n                                        new Name(new LocationTrace(15, 18, _str2datasyd),\n                                            _str7max))),\n                                new Block(new LocationTrace(16, 9, _str2datasyd),\n                                    [\n                                        new InterpolatedValue(new LocationTrace(16, 8, _str2datasyd),\n                                            new Name(new LocationTrace(16, 9, _str2datasyd),\n                                                _str3body)),\n                                        new Assignment(new LocationTrace(17, 8, _str2datasyd),\n                                            new InterpolatedValue(new LocationTrace(17, 8, _str2datasyd),\n                                                new Name(new LocationTrace(17, 9, _str2datasyd),\n                                                    _str5var)),\n                                            new BinaryOp(new LocationTrace(17, 13, _str2datasyd),\n                                                _str10,\n                                                new InterpolatedValue(new LocationTrace(17, 8, _str2datasyd),\n                                                    new Name(new LocationTrace(17, 9, _str2datasyd),\n                                                        _str5var)),\n                                                new InterpolatedValue(new LocationTrace(17, 16, _str2datasyd),\n                                                    new Name(new LocationTrace(17, 17, _str2datasyd),\n                                                        _str8step))))])])]))),\n        new Definition(new LocationTrace(22, 0, _str2datasyd),\n            _str11quote,\n            false,\n            [\n                new ParameterDescriptor(new LocationTrace(22, 7, _str2datasyd),\n                    _str12code,\n                    new Mapping(new LocationTrace(22, 7, _str2datasyd),\n                        []),\n                    new DefaultPlaceholder(new LocationTrace(22, 7, _str2datasyd)),\n                    true)],\n            new Name(new LocationTrace(22, 16, _str2datasyd),\n                _str12code)),\n        new Definition(new LocationTrace(25, 1, _str2datasyd),\n            _str13expand,\n            true,\n            [\n                new Name(new LocationTrace(25, 8, _str2datasyd),\n                    _str12code)],\n            new Name(new LocationTrace(25, 17, _str2datasyd),\n                _str12code)),\n        new DefaultPlaceholder(new LocationTrace(25, 21, _str2datasyd))]);\n\nexport default ast;\n", "export { baseEnv, baseCompileState, nodes, nodeHelp } from \"./lib\";\nexport * from \"./compiler/ast\";\nexport * as AST from \"./compiler/ast\";\nexport { SydError, ErrorNote, LocationTrace, ParseError, CompileError, RuntimeError } from \"./compiler/errors\";\nexport { parse } from \"./compiler\";\nexport { Message, MessageCode } from \"./worklet\";\nexport { source as libSrc, ast as lib } from \"./lib/data.syd\";\n\nexport function initWorklet(context: AudioContext, pathToWorkletScript?: URL | string) {\n    if (pathToWorkletScript === undefined) {\n        pathToWorkletScript = new URL(\"./sydWorklet.js\", import.meta.url);\n    }\n    context.audioWorklet.addModule(pathToWorkletScript);\n}\n"],
  "mappings": "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",
  "names": []
}
