{
  "version": 3,
  "sources": ["../src/lib/data.syd", "../src/index.ts"],
  "sourcesContent": ["import { AST, LocationTrace } from \"syd\";\n\nexport const source = /* @__PURE__ */ [\n    \"// basic control flow stuff\",\n    \"\",\n    \"/** while - repeats body while cond is true */\",\n    \"@while(@cond, @body) :- {\",\n    \"    &cond\",\n    \"        ? (&body, while(&cond, &body))\",\n    \"        : 0\",\n    \"};\",\n    \"\",\n    \"/**\",\n    \" * for - repeats body with var running through min-max\",\n    \" * (equivalent to `for (var = min; var < max; var += step) {body}` in JS)\",\n    \" */\",\n    \"@for(@var, min, max, @body, step=1) :- {\",\n    \"    &var = &min;\",\n    \"    while(&var < &max, (\",\n    \"        &body;\",\n    \"        &var += &step\",\n    \"    ))\",\n    \"};\",\n    \"\",\n    \"/** quotes the expression and does NOT evaluate it - returns the AST node verbatim */\",\n    \"quote(@code) :- code;\",\n    \"\",\n    \"/** forces the code to be expanded in the caller's local scope */\",\n    \"@expand(code) :- code;\",\n    \"\"\n].join(\"\\n\");\n\nconst     \n    _str0while = \"while\", \n    _str1cond = \"cond\", \n    _str2datasyd = \"data.syd\", \n    _str3body = \"body\", \n    _str4for = \"for\", \n    _str5var = \"var\", \n    _str6min = \"min\", \n    _str7max = \"max\", \n    _str8step = \"step\", \n    _str9 = \"<\", \n    _str10 = \"+\", \n    _str11quote = \"quote\", \n    _str12code = \"code\", \n    _str13expand = \"expand\";\n\nexport const ast = new AST.Block(new LocationTrace(3, 0, _str2datasyd),\n    [\n        new AST.Definition(new LocationTrace(3, 1, _str2datasyd),\n            _str0while,\n            true,\n            [\n                new AST.ParameterDescriptor(new LocationTrace(3, 8, _str2datasyd),\n                    _str1cond,\n                    new AST.Mapping(new LocationTrace(3, 8, _str2datasyd),\n                        []),\n                    new AST.DefaultPlaceholder(new LocationTrace(3, 8, _str2datasyd)),\n                    true),\n                new AST.ParameterDescriptor(new LocationTrace(3, 15, _str2datasyd),\n                    _str3body,\n                    new AST.Mapping(new LocationTrace(3, 15, _str2datasyd),\n                        []),\n                    new AST.DefaultPlaceholder(new LocationTrace(3, 15, _str2datasyd)),\n                    true)],\n            new AST.Template(new LocationTrace(3, 24, _str2datasyd),\n                new AST.Conditional(new LocationTrace(5, 8, _str2datasyd),\n                    new AST.InterpolatedValue(new LocationTrace(4, 4, _str2datasyd),\n                        new AST.Name(new LocationTrace(4, 5, _str2datasyd),\n                            _str1cond)),\n                    new AST.Block(new LocationTrace(5, 12, _str2datasyd),\n                        [\n                            new AST.InterpolatedValue(new LocationTrace(5, 11, _str2datasyd),\n                                new AST.Name(new LocationTrace(5, 12, _str2datasyd),\n                                    _str3body)),\n                            new AST.Call(new LocationTrace(5, 18, _str2datasyd),\n                                _str0while,\n                                [\n                                    new AST.InterpolatedValue(new LocationTrace(5, 24, _str2datasyd),\n                                        new AST.Name(new LocationTrace(5, 25, _str2datasyd),\n                                            _str1cond)),\n                                    new AST.InterpolatedValue(new LocationTrace(5, 31, _str2datasyd),\n                                        new AST.Name(new LocationTrace(5, 32, _str2datasyd),\n                                            _str3body))])]),\n                    new AST.Value(new LocationTrace(6, 10, _str2datasyd),\n                        0)))),\n        new AST.Definition(new LocationTrace(13, 1, _str2datasyd),\n            _str4for,\n            true,\n            [\n                new AST.ParameterDescriptor(new LocationTrace(13, 6, _str2datasyd),\n                    _str5var,\n                    new AST.Mapping(new LocationTrace(13, 6, _str2datasyd),\n                        []),\n                    new AST.DefaultPlaceholder(new LocationTrace(13, 6, _str2datasyd)),\n                    true),\n                new AST.Name(new LocationTrace(13, 11, _str2datasyd),\n                    _str6min),\n                new AST.Name(new LocationTrace(13, 16, _str2datasyd),\n                    _str7max),\n                new AST.ParameterDescriptor(new LocationTrace(13, 22, _str2datasyd),\n                    _str3body,\n                    new AST.Mapping(new LocationTrace(13, 22, _str2datasyd),\n                        []),\n                    new AST.DefaultPlaceholder(new LocationTrace(13, 22, _str2datasyd)),\n                    true),\n                new AST.ParameterDescriptor(new LocationTrace(13, 28, _str2datasyd),\n                    _str8step,\n                    new AST.Mapping(new LocationTrace(13, 32, _str2datasyd),\n                        []),\n                    new AST.Value(new LocationTrace(13, 33, _str2datasyd),\n                        1),\n                    false)],\n            new AST.Template(new LocationTrace(13, 39, _str2datasyd),\n                new AST.Block(new LocationTrace(14, 5, _str2datasyd),\n                    [\n                        new AST.Assignment(new LocationTrace(14, 4, _str2datasyd),\n                            new AST.InterpolatedValue(new LocationTrace(14, 4, _str2datasyd),\n                                new AST.Name(new LocationTrace(14, 5, _str2datasyd),\n                                    _str5var)),\n                            new AST.InterpolatedValue(new LocationTrace(14, 11, _str2datasyd),\n                                new AST.Name(new LocationTrace(14, 12, _str2datasyd),\n                                    _str6min))),\n                        new AST.Call(new LocationTrace(15, 4, _str2datasyd),\n                            _str0while,\n                            [\n                                new AST.BinaryOp(new LocationTrace(15, 15, _str2datasyd),\n                                    _str9,\n                                    new AST.InterpolatedValue(new LocationTrace(15, 10, _str2datasyd),\n                                        new AST.Name(new LocationTrace(15, 11, _str2datasyd),\n                                            _str5var)),\n                                    new AST.InterpolatedValue(new LocationTrace(15, 17, _str2datasyd),\n                                        new AST.Name(new LocationTrace(15, 18, _str2datasyd),\n                                            _str7max))),\n                                new AST.Block(new LocationTrace(16, 9, _str2datasyd),\n                                    [\n                                        new AST.InterpolatedValue(new LocationTrace(16, 8, _str2datasyd),\n                                            new AST.Name(new LocationTrace(16, 9, _str2datasyd),\n                                                _str3body)),\n                                        new AST.Assignment(new LocationTrace(17, 8, _str2datasyd),\n                                            new AST.InterpolatedValue(new LocationTrace(17, 8, _str2datasyd),\n                                                new AST.Name(new LocationTrace(17, 9, _str2datasyd),\n                                                    _str5var)),\n                                            new AST.BinaryOp(new LocationTrace(17, 13, _str2datasyd),\n                                                _str10,\n                                                new AST.InterpolatedValue(new LocationTrace(17, 8, _str2datasyd),\n                                                    new AST.Name(new LocationTrace(17, 9, _str2datasyd),\n                                                        _str5var)),\n                                                new AST.InterpolatedValue(new LocationTrace(17, 16, _str2datasyd),\n                                                    new AST.Name(new LocationTrace(17, 17, _str2datasyd),\n                                                        _str8step))))])])]))),\n        new AST.Definition(new LocationTrace(22, 0, _str2datasyd),\n            _str11quote,\n            false,\n            [\n                new AST.ParameterDescriptor(new LocationTrace(22, 7, _str2datasyd),\n                    _str12code,\n                    new AST.Mapping(new LocationTrace(22, 7, _str2datasyd),\n                        []),\n                    new AST.DefaultPlaceholder(new LocationTrace(22, 7, _str2datasyd)),\n                    true)],\n            new AST.Name(new LocationTrace(22, 16, _str2datasyd),\n                _str12code)),\n        new AST.Definition(new LocationTrace(25, 1, _str2datasyd),\n            _str13expand,\n            true,\n            [\n                new AST.Name(new LocationTrace(25, 8, _str2datasyd),\n                    _str12code)],\n            new AST.Name(new LocationTrace(25, 17, _str2datasyd),\n                _str12code)),\n        new AST.DefaultPlaceholder(new LocationTrace(25, 21, _str2datasyd))]);\n\nexport default ast;\n", "export { baseEnv, baseCompileState, nodes, nodeHelp } from \"./lib\";\nexport { AST } from \"./compiler/ast\";\nexport { SydError, LocationTrace, ParseError, CompileError, RuntimeError } from \"./compiler/errors\";\nexport { parse } from \"./compiler\";\nexport { Message, MessageCode } from \"./worklet\";\nexport { source as libSrc, ast as lib } from \"./lib/data.syd\";\n\nexport function initWorklet(context: AudioContext, pathToWorkletScript?: URL | string) {\n    if (pathToWorkletScript === undefined) {\n        pathToWorkletScript = new URL(\"./sydWorklet.js\", import.meta.url);\n    }\n    context.audioWorklet.addModule(pathToWorkletScript);\n}\n"],
  "mappings": "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",
  "names": ["source", "_str0while", "_str1cond", "_str2datasyd", "_str3body", "_str4for", "_str5var", "_str6min", "_str7max", "_str8step", "_str9", "_str10", "_str11quote", "_str12code", "_str13expand", "ast", "AST", "LocationTrace", "initWorklet", "context", "pathToWorkletScript", "__name"]
}
